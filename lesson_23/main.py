# –ö–ª–∞—Å—Å—ã
# class Person:  # –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞
#     def __init__(self, imya, vozrast):  # –º–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
#         self.age = vozrast  # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∞—Ç—Ä–∏–±—É—Ç–æ–≤
#         self.name = imya
#     def __str__(self):
#         return "–≤—Å–µ–º –∫–∏—Å–∫–∞–º –ø–∏—Å‚úåüèª"
#
#
# eugenii = Person("–Æ–¥–∂–∏–Ω", 40)
# liza = Person(vozrast=0, imya="–ö—Ä–∏—Å—Ç–∏–Ω–∞")
#
# print(kris.name)
# print(eugenii.age)
#
# print(kris)

# class HelloWorld:
#     def __getitem__(self, key):
#         print("hello world", key)
#
# hi = HelloWorld()
#
# # !!! –æ–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∑–¥–µ—Å—å –Ω–µ—Ç print(), –ø—Ä–æ—Å—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É
# hi[1732594]
#
# hi['Movavi']

# –ø–µ—Ä–≤—ã–π –∑–∞–¥–∞—á–µ–π
# from random import randint
#
#
# class Person:
#     def __init__(self, imya, familia, vozrast):
#         self.name = imya
#         self.f = familia
#         self.age = vozrast
#         self.grades = [randint(2,5)  for n in range(randint(5, 10))]
#         self.sa = sum(self.grades) / len(self.grades)
#
#     def __str__(self):
#         return f"{self.name} {self.f} {self.age}"
#
#     def greet(self):
#         return f"–ü—Ä–∏–≤–µ—Ç, —è {self.name} {self.f}, –º–Ω–µ {self.age}"
#
#
# kira = Person("–ö–∏—Ä–∞", "–ú–µ–¥–≤–µ–¥–µ–≤–∞", 23)
# print(kira.greet())
# print("–ò–º—è:", kira.name)
# print("–§–∞–º–∏–ª–∏—è:", kira.f)
# print("–í–æ–∑—Ä–∞—Å—Ç:", kira.age)
# print(kira)
# print(kira.grades)
# print(kira.sa)
# violetta = Person("–í–∏–æ–ª–µ—Ç—Ç–∞", "–ú–∞–ª—ã—à–µ–Ω–∫–æ", 22)
# liza = Person("–õ–∏–∑–∞", "–ê–Ω–¥—Ä—é—â–µ–Ω–∫–æ", 24)
# kris = Person("–ö—Ä–∏—Å", "–ó–∞—Ö–∞—Ä–æ–≤–∞", 28)
# students = [kira, violetta, liza, kris]
#
# dnevnik = {}
# for item in students:
#     dnevnik[item.name] = item.sa
# print(dnevnik)
# print(dnevnik.items())
# sorted_dnevnik = dict(reversed(sorted(dnevnik.items(), key=lambda item: item[1])))
#
# schetchik = 0
# for item in sorted_dnevnik:
#     schetchik += 1
#     print(f"{schetchik}. {item} - {sorted_dnevnik[item]}")

class Rectangle:
    def __init__(self, d1, d2):
        self.dot1 = d1
        self.dot2 = d2
    def ploshad(self):
        a = self.dot2.y - self.dot1.y
        b = self.dot2.x - self.dot1.x
        return a * b

class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y


dot1 = Point(1, 237)
dot2 = Point(2, 493)
pryamoug = Rectangle(dot1, dot2)

print(pryamoug.ploshad())
