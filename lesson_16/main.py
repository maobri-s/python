# –õ—è–º–±–¥–∞(lambda) —Ñ—É–Ω–∫—Ü–∏–∏
# plus_one2 = lambda a, b: a + b + 1
# print(plus_one2(5, 4)

# if-else –≤ lambda
# result = lambda: True if answer == "–î" else False

# List comprehension (–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ø–∏—Å–∫–∞)
# spisok = []
# for i in range(1, 6):  # –æ—Ç 1 –¥–æ 5
#    spisok.append(i)
# print(spisok)

# spisok2 = [n for n in range(1, 6)]
# 1. List comprehension –≤—Å–µ–≥–¥–∞ –ø–∏—à–µ—Ç—Å—è –≤ []
# 2. for n in range(1, 6)  –æ–±—ã—á–Ω—ã–π —Ü–∏–∫–ª for ->
# —Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ
# 3. –≤—Å–µ —á—Ç–æ —Å–ª–µ–≤–∞ –æ—Ç for -> —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
# print(spisok2)

# –ø–µ—Ä–≤—ã–π –∑–∞ –¥–∞—á–µ–π
# c2f = lambda c:c * 9/5 + 32
# f2c = lambda f:(f - 32) * 5/9
# c2k = lambda c:c + 273.15
# k2c = lambda k:k - 273.15
# f2k = lambda f:c2k(f2c(f))
# print(f2k(203))

# –≤—Ç–æ—Ä–æ–π –∑–∞ –¥–∞—á–µ–π
# from random import randint
# banana = lambda exit_trigger: True if exit_trigger == "–¥–∞" else False
# while True:
#    arbuz = int(input("—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –±—Ä–æ—Å–∞–µ—à—å –∫—É–±?üé≤"))
#    dies = [randint(1,6) for n in range(arbuz)]
#    print(dies)
#    kivi = input("–≤—ã—Ö–æ–¥–∏—à—å? –¥–∞/–Ω–µ—Ç").strip()
#    banana(kivi)
#    if banana(kivi):  # –µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–µ–ª –≤—ã–π—Ç–∏
#        break

# —Ç—Ä–µ—Ç–∏–π –∑–∞ –¥–∞—á–µ–π
# from random import choice
# chars = [list("–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø"),
#         list("–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è"),
#         list("ABCDEFGHIJKLMNOPQRSTUVWXYZ"),
#         list("abcdefghijklmnopqrstuvwxyz"),
#         list("1234567890")
#        ]

# cot = [choice(choice(chars)) for n in range(6)]
# cotik = "".join(cot)
# dictionaryy = {"https://www.google.com":"12345"}
# ssylka_na_kavkaz = "https://www.google.com"
# if ssylka_na_kavkaz in dictionaryy:
#    print("—Å—Å—ã–ª–∫–∞ —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ, –≤–æ—Ç –µ—ë –∫–æ—Ç:")  # –≤—ã–≤–æ–¥–∏–º –∫–æ–¥ —Å—Å—ã–ª–∫–æ–π
#    print(dictionaryy[ssylka_na_kavkaz])
# else:
#    print("—Å—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞, –¥–µ—Ä–∂–∏ –∫–æ—Ç–∞ —Å:", cotik)
#    dictionaryy[ssylka_na_kavkaz] = cotik

# —á–µ—Ç–≤—ë—Ä—Ç—ã–π –∑–∞ –æ—Å–æ–±–Ω—è–∫

u = lambda a, b:a / b
print(u(6, 3))
u2 = lambda a, b:a % b
print(u2(6, 3))
u3 = lambda a, b:a // b
print(u3(6, 3))
u4 = lambda a, b:a ** b
print(u4(6, 3))
u5 = lambda a: -a if a < 0 else a  # –µ—Å–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ, –º–µ–Ω—è–µ–º –∑–Ω–∞–∫
print(u5(-6))



