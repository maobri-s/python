# ZeroDivisionError
# x = 5/0

# TypeError
# x = "a" + 15

# IndexError
# x = [0, -15, "–ê–Ω—Ç–æ–Ω"]
# x[3]

# SyntaxError
# x = "–ü—Ä–∏–≤–µ—Ç, —è –ú–∞—à–∞.

# NameError
# x = "–Ø —Å—Ç—Ä–æ—á–∫–∞"
# print(x2)

# assert --> AssertionError
#def summa(numbers):
#    return sum(numbers)
#
#
#print(summa([1,2])) == 3
#assert summa([1,2]) == 4


# try - –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è
# except - –æ—Ç–ª–∞–≤–ª–∏–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
# else - –∏–Ω–∞—á–µ, –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ –±—ã–ª–æ (–µ—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ)
# finally - –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
# try:
#     number = int(input())
#     x = 5 / number
# except ZeroDivisionError:
#     print("—Å–ª—ã—à—å —Ç—ã, –Ω–∏–∑—è –Ω–∞ –Ω—É–ª—å –¥–µ–ª–∏—Ç—åüòù")
# except ValueError:
#     print("—Ö–æ—á—É —Ü–∏—Ñ–µ—Ä–∫–∏")
# except Exception:  # –ª—é–±–∞—è –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
#     print("–±–ª–∏–Ω,–Ω—É —Ç—ã –æ—à–∏–±—Å—è!üòï")
# else:  # else - –∫–æ–≥–¥–∞ –≤—Å—ë —Ö–æ—Ä–æ—à–æü•∞
#     print("—è –ø–æ–¥–µ–ª–∏–ª‚ò∫")
# finally:
#     print("–º–µ–Ω—è –Ω–∞–ø–∏—Å–∞–ª–∞ –º–∞—à–∞")
#
#
# print("—è –∑–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç–∞—Ç—å.")


# PASS
# try:
#     number = int(input())
#     x = 5 / number
# except Exception:
#     pass  # –∑–∞—Ç—ã—á–∫–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç
#
# if 5 == 5:
#     pass  #TODO: –¥–æ–ø–∏—Å–∞—Ç—å –∫–æ–¥
#
# try:
#     x = input("–í–≤–µ–¥–∏ –∏–º—è: ")
#     if x == "–ú–∞—à–∞":
#         raise Exception("–ú–∞—à—É –≤ –æ–±–∏–¥—É –Ω–µ –¥–∞–º")
#     # raise - –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –æ—à–∏–±–∫—É
# except Exception as error_message:
#     # as - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—à–∏–±–∫—É –≤ error_message
#     print("–≠—Ç–æ —Å–ª–æ–≤–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ!", error_message)
